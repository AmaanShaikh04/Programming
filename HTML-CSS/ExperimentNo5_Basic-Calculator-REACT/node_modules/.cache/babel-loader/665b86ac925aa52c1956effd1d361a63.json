{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amaan\\\\Downloads\\\\Basic-Calculator-REACT-main\\\\Basic-Calculator-REACT-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand == null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\n\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integr, decimal] = operand.split('.');\n  if (decimal == null) return INTEGER_FORMATTER.format(integr);\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [formatOperand(previousOperand), \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: formatOperand(currentOperand)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DtApBThIwDPzgeadQYFLEWaSpPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/amaan/Downloads/Basic-Calculator-REACT-main/Basic-Calculator-REACT-main/src/App.js"],"names":["DigitButton","OperationButton","useReducer","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integr","decimal","split","format","App","dispatch"],"mappings":"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","sourcesContent":["import \"./style.css\"\nimport  DigitButton from \"./DigitButton\"\nimport OperationButton from \"./OperationButton\"\nimport {useReducer} from \"react\"\n\nexport const ACTIONS ={\n   ADD_DIGIT: 'add-digit',\n   CHOOSE_OPERATION: 'choose-operation',\n   CLEAR: 'clear',\n   DELETE_DIGIT: 'delete-digit',\n   EVALUATE: 'evaluate',\n}\nfunction reducer (state, {type, payload}){\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite){\n        return{\n          ...state,\n          currentOperand: payload.digit,\n          overwrite:false,\n        }\n      }\n      if(payload.digit === \"0\" && state.currentOperand === \"0\") \n      {\n        return state\n      }\n      if(payload.digit === \".\" && state.currentOperand.includes(\".\"))\n      {\n         return state\n      }\n      return{\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n      case ACTIONS.CHOOSE_OPERATION:\n          if(state.currentOperand == null && state.previousOperand == null){\n            return state\n          }\n\n          if (state.currentOperand == null){\n            return{\n              ...state,\n              operation:payload.operation,\n            }\n          }\n\n          if( state.previousOperand == null){\n            return{\n              ...state,\n              operation: payload.operation,\n              previousOperand: state.currentOperand,\n              currentOperand: null,\n              \n            }\n          }\n          return {\n            ...state,\n            previousOperand: evaluate(state),\n            operation: payload.operation,\n            currentOperand: null,\n          }\n\n      case ACTIONS.CLEAR:\n        return{}\n      case ACTIONS.DELETE_DIGIT:\n         if (state.overwrite){\n         return{\n           ...state,\n           overwrite: false,\n           currentOperand: null\n         } \n        }\n        if (state.currentOperand == null) return state\n        if (state.currentOperand.length === 1){\n          return {...state, currentOperand: null}\n        }\n        return{\n          ...state,\n          currentOperand: state.currentOperand.slice(0, -1)\n        }\n      case ACTIONS.EVALUATE:  \n         if(state.operation == null || state.currentOperand == null || state.previousOperand == null){\n           return state\n         } \n         return{\n           ...state,\n           overwrite: true,\n           previousOperand: null,\n           operation:null, \n           currentOperand:evaluate(state),\n\n         }\n  }\n}\n function evaluate({currentOperand, previousOperand, operation}){\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n   if(isNaN(prev) || isNaN(current)) return \"\"\n   let computation = \"\"\n   switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"รท\":\n      computation = prev / current\n      break\n  }\n\n  return computation.toString()\n}\n\n const INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n  })\n  function formatOperand(operand) {\n    if (operand == null)\n    return\n    const[integr, decimal] = operand.split('.')\n    if (decimal == null)\n    return INTEGER_FORMATTER.format(integr)\n  }\nfunction App() {\n  const[{currentOperand, previousOperand, operation }, dispatch] =useReducer(reducer, {} )\n \n  return (\n    <div className='calculator-grid'>\n      <div className='output'>\n      <div className='previous-operand'>{formatOperand (previousOperand)} {operation}</div>\n      <div className='current-operand'>{formatOperand(currentOperand)}</div>\n      </div>\n      <button className='span-two' onClick={() => dispatch({type: ACTIONS.CLEAR})}>AC</button>\n      <button onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n      {/* <DigitButton digit=\"รท\" dispatch ={dispatch} /> */}\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n     \n      <button className='span-two'  onClick={() => dispatch({type: ACTIONS.EVALUATE})}>=</button>\n    </div>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}